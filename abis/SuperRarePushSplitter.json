{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_splitAddrs",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_splitRatios",
          "type": "uint256[]"
        }
      ],
      "name": "initiailize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "splitAddrs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "splitRatios",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "210:1058:73:-:0;;;1332:4:26;1289:48;;210:1058:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "210:1058:73:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;998:9;984:11;1017:243;1041:10;:17;1037:21;;1017:243;;;1079:14;1121:5;1103:11;1115:1;1103:14;;;;;;;;:::i;:::-;;;;;;;;;1097:3;:20;;;;:::i;:::-;1096:30;;;;:::i;:::-;1079:47;;1141:12;1159:10;1170:1;1159:13;;;;;;;;:::i;:::-;;;;;;;;;;:37;;-1:-1:-1;;;;;1159:13:73;;;;1185:6;;1159:37;;:13;:37;1185:6;1159:13;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1140:56;;;1218:7;1210:39;;;;-1:-1:-1;;;1210:39:73;;1085:2:75;1210:39:73;;;1067:21:75;1124:2;1104:18;;;1097:30;-1:-1:-1;;;1143:18:75;;;1136:49;1202:18;;1210:39:73;;;;;;;;;1065:195;;1060:3;;;;;:::i;:::-;;;;1017:243;;;;210:1058;;;;286:27;;;;;;;;;;-1:-1:-1;286:27:73;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1720:32:75;;;1702:51;;1690:2;1675:18;286:27:73;;;;;;;;3387:195:26;;;;;;;;;;-1:-1:-1;3387:195:26;;;;;:::i;:::-;;:::i;3901:220::-;;;;;;:::i;:::-;;:::i;3006:131::-;;;;;;;;;;;;;:::i;:::-;;;3411:25:75;;;3399:2;3384:18;3006:131:26;3265:177:75;392:477:73;;;;;;;;;;-1:-1:-1;392:477:73;;;;;:::i;:::-;;:::i;2064:101:20:-;;;;;;;;;;;;;:::i;319:28:73:-;;;;;;;;;;-1:-1:-1;319:28:73;;;;;:::i;:::-;;:::i;1441:85:20:-;;;;;;;;;;-1:-1:-1;1513:6:20;;-1:-1:-1;;;;;1513:6:20;1441:85;;2314:198;;;;;;;;;;-1:-1:-1;2314:198:20;;;;;:::i;:::-;;:::i;286:27:73:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;286:27:73;;-1:-1:-1;286:27:73;:::o;3387:195:26:-;-1:-1:-1;;;;;1898:6:26;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:26;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:26;:20;-1:-1:-1;;;;;;;;;;;1536:65:23;-1:-1:-1;;;;;1536:65:23;;1457:151;1971:20:26;-1:-1:-1;;;;;1971:30:26;;1963:87;;;;-1:-1:-1;;;1963:87:26;;;;;;;:::i;:::-;3468:36:::1;3486:17;3468;:36::i;:::-;3555:12;::::0;;3565:1:::1;3555:12:::0;;;::::1;::::0;::::1;::::0;;;3514:61:::1;::::0;3536:17;;3555:12;3514:21:::1;:61::i;:::-;3387:195:::0;:::o;3901:220::-;-1:-1:-1;;;;;1898:6:26;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:26;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:26;:20;-1:-1:-1;;;;;;;;;;;1536:65:23;-1:-1:-1;;;;;1536:65:23;;1457:151;1971:20:26;-1:-1:-1;;;;;1971:30:26;;1963:87;;;;-1:-1:-1;;;1963:87:26;;;;;;;:::i;:::-;4016:36:::1;4034:17;4016;:36::i;:::-;4062:52;4084:17;4103:4;4109;4062:21;:52::i;:::-;3901:220:::0;;:::o;3006:131::-;3084:7;2324:4;-1:-1:-1;;;;;2333:6:26;2316:23;;2308:92;;;;-1:-1:-1;;;2308:92:26;;5807:2:75;2308:92:26;;;5789:21:75;5846:2;5826:18;;;5819:30;5885:34;5865:18;;;5858:62;5956:26;5936:18;;;5929:54;6000:19;;2308:92:26;5605:420:75;2308:92:26;-1:-1:-1;;;;;;;;;;;;3006:131:26;:::o;392:477:73:-;3279:19:25;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:25;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:25;1713:19:27;:23;;;3387:66:25;;-1:-1:-1;3436:12:25;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:25;;6232:2:75;3325:201:25;;;6214:21:75;6271:2;6251:18;;;6244:30;6310:34;6290:18;;;6283:62;-1:-1:-1;;;6361:18:75;;;6354:44;6415:19;;3325:201:25;6030:410:75;3325:201:25;3536:12;:16;;-1:-1:-1;;3536:16:25;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:25;;;;;3562:65;539:41:73;;::::1;531:69;;;::::0;-1:-1:-1;;;531:69:73;;6647:2:75;531:69:73::1;::::0;::::1;6629:21:75::0;6686:2;6666:18;;;6659:30;-1:-1:-1;;;6705:18:75;;;6698:45;6760:18;;531:69:73::1;6445:339:75::0;531:69:73::1;610:13;643:9:::0;638:99:::1;658:23:::0;;::::1;638:99;;;711:12;;724:1;711:15;;;;;;;:::i;:::-;;;;;;;702:24;;;;;:::i;:::-;::::0;-1:-1:-1;683:3:73;::::1;::::0;::::1;:::i;:::-;;;;638:99;;;;755:5;764;755:14;747:44;;;::::0;-1:-1:-1;;;747:44:73;;7124:2:75;747:44:73::1;::::0;::::1;7106:21:75::0;7163:2;7143:18;;;7136:30;-1:-1:-1;;;7182:18:75;;;7175:47;7239:18;;747:44:73::1;6922:341:75::0;747:44:73::1;802:24;:10;815:11:::0;;802:24:::1;:::i;:::-;-1:-1:-1::0;836:26:73::1;:11;850:12:::0;;836:26:::1;:::i;:::-;;521:348;3651:14:25::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:25;;;3721:14;;-1:-1:-1;7420:36:75;;3721:14:25;;7408:2:75;7393:18;3721:14:25;;;;;;;3647:99;3269:483;392:477:73;;;;:::o;2064:101:20:-;1334:13;:11;:13::i;:::-;2128:30:::1;2155:1;2128:18;:30::i;:::-;2064:101::o:0;319:28:73:-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;319:28:73;:::o;2314:198:20:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2402:22:20;::::1;2394:73;;;::::0;-1:-1:-1;;;2394:73:20;;7669:2:75;2394:73:20::1;::::0;::::1;7651:21:75::0;7708:2;7688:18;;;7681:30;7747:34;7727:18;;;7720:62;-1:-1:-1;;;7798:18:75;;;7791:36;7844:19;;2394:73:20::1;7467:402:75::0;2394:73:20::1;2477:28;2496:8;2477:18;:28::i;875:66:73:-:0;1334:13:20;:11;:13::i;2820:944:23:-;971:66;3236:59;;;3232:526;;;3311:37;3330:17;3311:18;:37::i;:::-;2820:944;;;:::o;3232:526::-;3412:17;-1:-1:-1;;;;;3383:61:23;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3383:63:23;;;;;;;;-1:-1:-1;;3383:63:23;;;;;;;;;;;;:::i;:::-;;;3379:302;;3610:56;;-1:-1:-1;;;3610:56:23;;8265:2:75;3610:56:23;;;8247:21:75;8304:2;8284:18;;;8277:30;8343:34;8323:18;;;8316:62;-1:-1:-1;;;8394:18:75;;;8387:44;8448:19;;3610:56:23;8063:410:75;3379:302:23;-1:-1:-1;;;;;;;;;;;3496:28:23;;3488:82;;;;-1:-1:-1;;;3488:82:23;;8680:2:75;3488:82:23;;;8662:21:75;8719:2;8699:18;;;8692:30;8758:34;8738:18;;;8731:62;-1:-1:-1;;;8809:18:75;;;8802:39;8858:19;;3488:82:23;8478:405:75;3488:82:23;3447:138;3694:53;3712:17;3731:4;3737:9;3694:17;:53::i;1599:130:20:-;1513:6;;-1:-1:-1;;;;;1513:6:20;929:10:28;1662:23:20;1654:68;;;;-1:-1:-1;;;1654:68:20;;9090:2:75;1654:68:20;;;9072:21:75;;;9109:18;;;9102:30;9168:34;9148:18;;;9141:62;9220:18;;1654:68:20;8888:356:75;2666:187:20;2758:6;;;-1:-1:-1;;;;;2774:17:20;;;-1:-1:-1;;;;;;2774:17:20;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;2739:16;;2806:40;2729:124;2666:187;:::o;1699:281:23:-;-1:-1:-1;;;;;1713:19:27;;;1772:106:23;;;;-1:-1:-1;;;1772:106:23;;9451:2:75;1772:106:23;;;9433:21:75;9490:2;9470:18;;;9463:30;9529:34;9509:18;;;9502:62;-1:-1:-1;;;9580:18:75;;;9573:43;9633:19;;1772:106:23;9249:409:75;1772:106:23;-1:-1:-1;;;;;;;;;;;1888:85:23;;-1:-1:-1;;;;;;1888:85:23;-1:-1:-1;;;;;1888:85:23;;;;;;;;;;1699:281::o;2372:276::-;2480:29;2491:17;2480:10;:29::i;:::-;2537:1;2523:4;:11;:15;:28;;;;2542:9;2523:28;2519:123;;;2567:64;2607:17;2626:4;2567:39;:64::i;:::-;;2372:276;;;:::o;2086:152::-;2152:37;2171:17;2152:18;:37::i;:::-;2204:27;;-1:-1:-1;;;;;2204:27:23;;;;;;;;2086:152;:::o;6685:198:27:-;6768:12;6799:77;6820:6;6828:4;6799:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6792:84;6685:198;-1:-1:-1;;;6685:198:27:o;7069:325::-;7210:12;7235;7249:23;7276:6;-1:-1:-1;;;;;7276:19:27;7296:4;7276:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7234:67;;;;7318:69;7345:6;7353:7;7362:10;7374:12;7318:26;:69::i;:::-;7311:76;7069:325;-1:-1:-1;;;;;;7069:325:27:o;7682:628::-;7862:12;7890:7;7886:418;;;7917:10;:17;7938:1;7917:22;7913:286;;-1:-1:-1;;;;;1713:19:27;;;8124:60;;;;-1:-1:-1;;;8124:60:27;;10407:2:75;8124:60:27;;;10389:21:75;10446:2;10426:18;;;10419:30;10485:31;10465:18;;;10458:59;10534:18;;8124:60:27;10205:353:75;8124:60:27;-1:-1:-1;8219:10:27;8212:17;;7886:418;8260:33;8268:10;8280:12;8260:7;:33::i;:::-;7682:628;;;;;;:::o;8832:540::-;8991:17;;:21;8987:379;;9219:10;9213:17;9275:15;9262:10;9258:2;9254:19;9247:44;8987:379;9342:12;9335:20;;-1:-1:-1;;;9335:20:27;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:127:75;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:127;207:10;202:3;198:20;195:1;188:31;238:4;235:1;228:15;262:4;259:1;252:15;278:168;318:7;384:1;380;376:6;372:14;369:1;366:21;361:1;354:9;347:17;343:45;340:71;;;391:18;;:::i;:::-;-1:-1:-1;431:9:75;;278:168::o;451:217::-;491:1;517;507:132;;561:10;556:3;552:20;549:1;542:31;596:4;593:1;586:15;624:4;621:1;614:15;507:132;-1:-1:-1;653:9:75;;451:217::o;1231:135::-;1270:3;1291:17;;;1288:43;;1311:18;;:::i;:::-;-1:-1:-1;1358:1:75;1347:13;;1231:135::o;1371:180::-;1430:6;1483:2;1471:9;1462:7;1458:23;1454:32;1451:52;;;1499:1;1496;1489:12;1451:52;-1:-1:-1;1522:23:75;;1371:180;-1:-1:-1;1371:180:75:o;1764:173::-;1832:20;;-1:-1:-1;;;;;1881:31:75;;1871:42;;1861:70;;1927:1;1924;1917:12;1861:70;1764:173;;;:::o;1942:186::-;2001:6;2054:2;2042:9;2033:7;2029:23;2025:32;2022:52;;;2070:1;2067;2060:12;2022:52;2093:29;2112:9;2093:29;:::i;2133:127::-;2194:10;2189:3;2185:20;2182:1;2175:31;2225:4;2222:1;2215:15;2249:4;2246:1;2239:15;2265:995;2342:6;2350;2403:2;2391:9;2382:7;2378:23;2374:32;2371:52;;;2419:1;2416;2409:12;2371:52;2442:29;2461:9;2442:29;:::i;:::-;2432:39;;2522:2;2511:9;2507:18;2494:32;2545:18;2586:2;2578:6;2575:14;2572:34;;;2602:1;2599;2592:12;2572:34;2640:6;2629:9;2625:22;2615:32;;2685:7;2678:4;2674:2;2670:13;2666:27;2656:55;;2707:1;2704;2697:12;2656:55;2743:2;2730:16;2765:2;2761;2758:10;2755:36;;;2771:18;;:::i;:::-;2846:2;2840:9;2814:2;2900:13;;-1:-1:-1;;2896:22:75;;;2920:2;2892:31;2888:40;2876:53;;;2944:18;;;2964:22;;;2941:46;2938:72;;;2990:18;;:::i;:::-;3030:10;3026:2;3019:22;3065:2;3057:6;3050:18;3105:7;3100:2;3095;3091;3087:11;3083:20;3080:33;3077:53;;;3126:1;3123;3116:12;3077:53;3182:2;3177;3173;3169:11;3164:2;3156:6;3152:15;3139:46;3227:1;3222:2;3217;3209:6;3205:15;3201:24;3194:35;3248:6;3238:16;;;;;;;2265:995;;;;;:::o;3447:367::-;3510:8;3520:6;3574:3;3567:4;3559:6;3555:17;3551:27;3541:55;;3592:1;3589;3582:12;3541:55;-1:-1:-1;3615:20:75;;3658:18;3647:30;;3644:50;;;3690:1;3687;3680:12;3644:50;3727:4;3719:6;3715:17;3703:29;;3787:3;3780:4;3770:6;3767:1;3763:14;3755:6;3751:27;3747:38;3744:47;3741:67;;;3804:1;3801;3794:12;3741:67;3447:367;;;;;:::o;3819:773::-;3941:6;3949;3957;3965;4018:2;4006:9;3997:7;3993:23;3989:32;3986:52;;;4034:1;4031;4024:12;3986:52;4074:9;4061:23;4103:18;4144:2;4136:6;4133:14;4130:34;;;4160:1;4157;4150:12;4130:34;4199:70;4261:7;4252:6;4241:9;4237:22;4199:70;:::i;:::-;4288:8;;-1:-1:-1;4173:96:75;-1:-1:-1;4376:2:75;4361:18;;4348:32;;-1:-1:-1;4392:16:75;;;4389:36;;;4421:1;4418;4411:12;4389:36;;4460:72;4524:7;4513:8;4502:9;4498:24;4460:72;:::i;:::-;3819:773;;;;-1:-1:-1;4551:8:75;-1:-1:-1;;;;3819:773:75:o;4779:408::-;4981:2;4963:21;;;5020:2;5000:18;;;4993:30;5059:34;5054:2;5039:18;;5032:62;-1:-1:-1;;;5125:2:75;5110:18;;5103:42;5177:3;5162:19;;4779:408::o;5192:::-;5394:2;5376:21;;;5433:2;5413:18;;;5406:30;5472:34;5467:2;5452:18;;5445:62;-1:-1:-1;;;5538:2:75;5523:18;;5516:42;5590:3;5575:19;;5192:408::o;6789:128::-;6829:3;6860:1;6856:6;6853:1;6850:13;6847:39;;;6866:18;;:::i;:::-;-1:-1:-1;6902:9:75;;6789:128::o;7874:184::-;7944:6;7997:2;7985:9;7976:7;7972:23;7968:32;7965:52;;;8013:1;8010;8003:12;7965:52;-1:-1:-1;8036:16:75;;7874:184;-1:-1:-1;7874:184:75:o;9663:258::-;9735:1;9745:113;9759:6;9756:1;9753:13;9745:113;;;9835:11;;;9829:18;9816:11;;;9809:39;9781:2;9774:10;9745:113;;;9876:6;9873:1;9870:13;9867:48;;;-1:-1:-1;;9911:1:75;9893:16;;9886:27;9663:258::o;9926:274::-;10055:3;10093:6;10087:13;10109:53;10155:6;10150:3;10143:4;10135:6;10131:17;10109:53;:::i;:::-;10178:16;;;;;9926:274;-1:-1:-1;;9926:274:75:o;10563:383::-;10712:2;10701:9;10694:21;10675:4;10744:6;10738:13;10787:6;10782:2;10771:9;10767:18;10760:34;10803:66;10862:6;10857:2;10846:9;10842:18;10837:2;10829:6;10825:15;10803:66;:::i;:::-;10930:2;10909:15;-1:-1:-1;;10905:29:75;10890:45;;;;10937:2;10886:54;;10563:383;-1:-1:-1;;10563:383:75:o",
    "linkReferences": {},
    "immutableReferences": {
      "30472": [
        {
          "start": 775,
          "length": 32
        },
        {
          "start": 839,
          "length": 32
        },
        {
          "start": 998,
          "length": 32
        },
        {
          "start": 1062,
          "length": 32
        },
        {
          "start": 1209,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "initiailize(address[],uint256[])": "6d819363",
    "owner()": "8da5cb5b",
    "proxiableUUID()": "52d1902d",
    "renounceOwnership()": "715018a6",
    "splitAddrs(uint256)": "1f9f20c9",
    "splitRatios(uint256)": "7ab0d1e8",
    "transferOwnership(address)": "f2fde38b",
    "upgradeTo(address)": "3659cfe6",
    "upgradeToAndCall(address,bytes)": "4f1ef286"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_splitAddrs\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_splitRatios\",\"type\":\"uint256[]\"}],\"name\":\"initiailize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"splitAddrs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"splitRatios\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/utils/SuperRarePushSplitter.sol\":\"SuperRarePushSplitter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":royalty-guard/=lib/royalty-guard/src/royalty-guard/\",\":solmate/=lib/royalty-guard/lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159\",\"dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d\",\"dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"src/utils/SuperRarePushSplitter.sol\":{\"keccak256\":\"0xcf3719ef1f24e0beab1036e00271cb12eb2d4128df61ce848611cfdc0e27e1d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77cea8f0611fe6e3067a6c4847b436e3e1547c0cf1c5b09e8bfcb6df8883cf78\",\"dweb:/ipfs/QmaXTemyP2cebsdr6USpTZrvfZzru3ikBvciUg1xYHox5y\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "beacon",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BeaconUpgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_splitAddrs",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "_splitRatios",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initiailize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "splitAddrs",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "splitRatios",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "proxiableUUID()": {
            "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "upgradeTo(address)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "upgradeToAndCall(address,bytes)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":royalty-guard/=lib/royalty-guard/src/royalty-guard/",
        ":solmate/=lib/royalty-guard/lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/utils/SuperRarePushSplitter.sol": "SuperRarePushSplitter"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
        "urls": [
          "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
          "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC1967Upgradeable.sol": {
        "keccak256": "0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b",
        "urls": [
          "bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0",
          "dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol": {
        "keccak256": "0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f",
        "urls": [
          "bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053",
          "dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
        "keccak256": "0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161",
        "urls": [
          "bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159",
          "dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol": {
        "keccak256": "0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908",
        "urls": [
          "bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1",
          "dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad",
        "urls": [
          "bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d",
          "dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol": {
        "keccak256": "0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908",
        "urls": [
          "bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685",
          "dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy"
        ],
        "license": "MIT"
      },
      "src/utils/SuperRarePushSplitter.sol": {
        "keccak256": "0xcf3719ef1f24e0beab1036e00271cb12eb2d4128df61ce848611cfdc0e27e1d0",
        "urls": [
          "bzz-raw://77cea8f0611fe6e3067a6c4847b436e3e1547c0cf1c5b09e8bfcb6df8883cf78",
          "dweb:/ipfs/QmaXTemyP2cebsdr6USpTZrvfZzru3ikBvciUg1xYHox5y"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/utils/SuperRarePushSplitter.sol",
    "id": 39158,
    "exportedSymbols": {
      "AddressUpgradeable": [
        30907
      ],
      "ContextUpgradeable": [
        30949
      ],
      "ERC1967UpgradeUpgradeable": [
        30262
      ],
      "IBeaconUpgradeable": [
        30272
      ],
      "IERC1822ProxiableUpgradeable": [
        29938
      ],
      "IERC1967Upgradeable": [
        29928
      ],
      "Initializable": [
        30441
      ],
      "OwnableUpgradeable": [
        29907
      ],
      "StorageSlotUpgradeable": [
        31059
      ],
      "SuperRarePushSplitter": [
        39157
      ],
      "UUPSUpgradeable": [
        30577
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1237:73",
    "nodes": [
      {
        "id": 39027,
        "nodeType": "PragmaDirective",
        "src": "32:23:73",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 39028,
        "nodeType": "ImportDirective",
        "src": "57:76:73",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39158,
        "sourceUnit": 30578,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 39029,
        "nodeType": "ImportDirective",
        "src": "134:74:73",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/access/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39158,
        "sourceUnit": 29908,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 39157,
        "nodeType": "ContractDefinition",
        "src": "210:1058:73",
        "nodes": [
          {
            "id": 39036,
            "nodeType": "VariableDeclaration",
            "src": "286:27:73",
            "nodes": [],
            "constant": false,
            "functionSelector": "1f9f20c9",
            "mutability": "mutable",
            "name": "splitAddrs",
            "nameLocation": "303:10:73",
            "scope": 39157,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 39034,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "286:7:73",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 39035,
              "nodeType": "ArrayTypeName",
              "src": "286:9:73",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "id": 39039,
            "nodeType": "VariableDeclaration",
            "src": "319:28:73",
            "nodes": [],
            "constant": false,
            "functionSelector": "7ab0d1e8",
            "mutability": "mutable",
            "name": "splitRatios",
            "nameLocation": "336:11:73",
            "scope": 39157,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 39037,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "319:7:73",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 39038,
              "nodeType": "ArrayTypeName",
              "src": "319:9:73",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "public"
          },
          {
            "id": 39098,
            "nodeType": "FunctionDefinition",
            "src": "392:477:73",
            "nodes": [],
            "body": {
              "id": 39097,
              "nodeType": "Block",
              "src": "521:348:73",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 39055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 39051,
                            "name": "_splitAddrs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39042,
                            "src": "539:11:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 39052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "539:18:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 39053,
                            "name": "_splitRatios",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39045,
                            "src": "561:12:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          },
                          "id": 39054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "561:19:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "539:41:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f742073616d65206c656e677468",
                        "id": 39056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "582:17:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3760941c8dc0c82a353f3010c54b4e101fbe2769fd49ca3f1fc2167ee772486d",
                          "typeString": "literal_string \"not same length\""
                        },
                        "value": "not same length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3760941c8dc0c82a353f3010c54b4e101fbe2769fd49ca3f1fc2167ee772486d",
                          "typeString": "literal_string \"not same length\""
                        }
                      ],
                      "id": 39050,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "531:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 39057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "531:69:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39058,
                  "nodeType": "ExpressionStatement",
                  "src": "531:69:73"
                },
                {
                  "assignments": [
                    39060
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39060,
                      "mutability": "mutable",
                      "name": "total",
                      "nameLocation": "618:5:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 39097,
                      "src": "610:13:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 39059,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "610:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39062,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 39061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "626:1:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "610:17:73"
                },
                {
                  "body": {
                    "id": 39080,
                    "nodeType": "Block",
                    "src": "688:49:73",
                    "statements": [
                      {
                        "expression": {
                          "id": 39078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 39074,
                            "name": "total",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39060,
                            "src": "702:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 39075,
                              "name": "_splitRatios",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39045,
                              "src": "711:12:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            "id": 39077,
                            "indexExpression": {
                              "id": 39076,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39064,
                              "src": "724:1:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "711:15:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "702:24:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 39079,
                        "nodeType": "ExpressionStatement",
                        "src": "702:24:73"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 39070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 39067,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39064,
                      "src": "658:1:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 39068,
                        "name": "_splitRatios",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39045,
                        "src": "662:12:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      "id": 39069,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "662:19:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "658:23:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 39081,
                  "initializationExpression": {
                    "assignments": [
                      39064
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 39064,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "651:1:73",
                        "nodeType": "VariableDeclaration",
                        "scope": 39081,
                        "src": "643:9:73",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 39063,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "643:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 39066,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 39065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "655:1:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "643:13:73"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 39072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "683:3:73",
                      "subExpression": {
                        "id": 39071,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39064,
                        "src": "683:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 39073,
                    "nodeType": "ExpressionStatement",
                    "src": "683:3:73"
                  },
                  "nodeType": "ForStatement",
                  "src": "638:99:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 39085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 39083,
                          "name": "total",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39060,
                          "src": "755:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3130303030",
                          "id": 39084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "764:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "src": "755:14:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420656e6f75676820726174696f73",
                        "id": 39086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "771:19:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_53f6eae4b90517657e0e05f0fdec41e9241226713c8e1e498779d2e3323bab9c",
                          "typeString": "literal_string \"not enough ratios\""
                        },
                        "value": "not enough ratios"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_53f6eae4b90517657e0e05f0fdec41e9241226713c8e1e498779d2e3323bab9c",
                          "typeString": "literal_string \"not enough ratios\""
                        }
                      ],
                      "id": 39082,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "747:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 39087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "747:44:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39088,
                  "nodeType": "ExpressionStatement",
                  "src": "747:44:73"
                },
                {
                  "expression": {
                    "id": 39091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 39089,
                      "name": "splitAddrs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39036,
                      "src": "802:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 39090,
                      "name": "_splitAddrs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39042,
                      "src": "815:11:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                        "typeString": "address[] calldata"
                      }
                    },
                    "src": "802:24:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 39092,
                  "nodeType": "ExpressionStatement",
                  "src": "802:24:73"
                },
                {
                  "expression": {
                    "id": 39095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 39093,
                      "name": "splitRatios",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39039,
                      "src": "836:11:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 39094,
                      "name": "_splitRatios",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39045,
                      "src": "850:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                        "typeString": "uint256[] calldata"
                      }
                    },
                    "src": "836:26:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 39096,
                  "nodeType": "ExpressionStatement",
                  "src": "836:26:73"
                }
              ]
            },
            "functionSelector": "6d819363",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 39048,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 39047,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30343,
                  "src": "509:11:73"
                },
                "nodeType": "ModifierInvocation",
                "src": "509:11:73"
              }
            ],
            "name": "initiailize",
            "nameLocation": "401:11:73",
            "parameters": {
              "id": 39046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39042,
                  "mutability": "mutable",
                  "name": "_splitAddrs",
                  "nameLocation": "441:11:73",
                  "nodeType": "VariableDeclaration",
                  "scope": 39098,
                  "src": "422:30:73",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 39040,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "422:7:73",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 39041,
                    "nodeType": "ArrayTypeName",
                    "src": "422:9:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39045,
                  "mutability": "mutable",
                  "name": "_splitRatios",
                  "nameLocation": "481:12:73",
                  "nodeType": "VariableDeclaration",
                  "scope": 39098,
                  "src": "462:31:73",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 39043,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "462:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 39044,
                    "nodeType": "ArrayTypeName",
                    "src": "462:9:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "412:87:73"
            },
            "returnParameters": {
              "id": 39049,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "521:0:73"
            },
            "scope": 39157,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 39107,
            "nodeType": "FunctionDefinition",
            "src": "875:66:73",
            "nodes": [],
            "body": {
              "id": 39106,
              "nodeType": "Block",
              "src": "939:2:73",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              30571
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 39104,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 39103,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29821,
                  "src": "929:9:73"
                },
                "nodeType": "ModifierInvocation",
                "src": "929:9:73"
              }
            ],
            "name": "_authorizeUpgrade",
            "nameLocation": "884:17:73",
            "overrides": {
              "id": 39102,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "920:8:73"
            },
            "parameters": {
              "id": 39101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39100,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39107,
                  "src": "902:7:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39099,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "902:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "901:9:73"
            },
            "returnParameters": {
              "id": 39105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "939:0:73"
            },
            "scope": 39157,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 39156,
            "nodeType": "FunctionDefinition",
            "src": "947:319:73",
            "nodes": [],
            "body": {
              "id": 39155,
              "nodeType": "Block",
              "src": "974:292:73",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    39111
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39111,
                      "mutability": "mutable",
                      "name": "amt",
                      "nameLocation": "992:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 39155,
                      "src": "984:11:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 39110,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "984:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39114,
                  "initialValue": {
                    "expression": {
                      "id": 39112,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "998:3:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 39113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "998:9:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "984:23:73"
                },
                {
                  "body": {
                    "id": 39153,
                    "nodeType": "Block",
                    "src": "1065:195:73",
                    "statements": [
                      {
                        "assignments": [
                          39127
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 39127,
                            "mutability": "mutable",
                            "name": "indAmt",
                            "nameLocation": "1087:6:73",
                            "nodeType": "VariableDeclaration",
                            "scope": 39153,
                            "src": "1079:14:73",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 39126,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1079:7:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 39136,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 39135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 39132,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 39128,
                                  "name": "amt",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 39111,
                                  "src": "1097:3:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "baseExpression": {
                                    "id": 39129,
                                    "name": "splitRatios",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 39039,
                                    "src": "1103:11:73",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 39131,
                                  "indexExpression": {
                                    "id": 39130,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 39116,
                                    "src": "1115:1:73",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1103:14:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1097:20:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 39133,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1096:22:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "3130303030",
                            "id": 39134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1121:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000_by_1",
                              "typeString": "int_const 10000"
                            },
                            "value": "10000"
                          },
                          "src": "1096:30:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1079:47:73"
                      },
                      {
                        "assignments": [
                          39138,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 39138,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "1146:7:73",
                            "nodeType": "VariableDeclaration",
                            "scope": 39153,
                            "src": "1141:12:73",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 39137,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1141:4:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 39147,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 39145,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1193:2:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "baseExpression": {
                                  "id": 39139,
                                  "name": "splitAddrs",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 39036,
                                  "src": "1159:10:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 39141,
                                "indexExpression": {
                                  "id": 39140,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 39116,
                                  "src": "1170:1:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1159:13:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 39142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "1159:18:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 39144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 39143,
                                "name": "indAmt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39127,
                                "src": "1185:6:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "1159:33:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 39146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1159:37:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1140:56:73"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 39149,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39138,
                              "src": "1218:7:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "73656e64206e6f74207375636365737366756c",
                              "id": 39150,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1227:21:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b5769f733654b44ea71614fa753e087b3dbb0f039a6a93f4f01e88ba6739fef0",
                                "typeString": "literal_string \"send not successful\""
                              },
                              "value": "send not successful"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b5769f733654b44ea71614fa753e087b3dbb0f039a6a93f4f01e88ba6739fef0",
                                "typeString": "literal_string \"send not successful\""
                              }
                            ],
                            "id": 39148,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1210:7:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 39151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1210:39:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 39152,
                        "nodeType": "ExpressionStatement",
                        "src": "1210:39:73"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 39122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 39119,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39116,
                      "src": "1037:1:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 39120,
                        "name": "splitAddrs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39036,
                        "src": "1041:10:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 39121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1041:17:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1037:21:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 39154,
                  "initializationExpression": {
                    "assignments": [
                      39116
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 39116,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1030:1:73",
                        "nodeType": "VariableDeclaration",
                        "scope": 39154,
                        "src": "1022:9:73",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 39115,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1022:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 39118,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 39117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1034:1:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1022:13:73"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 39124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1060:3:73",
                      "subExpression": {
                        "id": 39123,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39116,
                        "src": "1060:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 39125,
                    "nodeType": "ExpressionStatement",
                    "src": "1060:3:73"
                  },
                  "nodeType": "ForStatement",
                  "src": "1017:243:73"
                }
              ]
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 39108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "954:2:73"
            },
            "returnParameters": {
              "id": 39109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "974:0:73"
            },
            "scope": 39157,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 39030,
              "name": "UUPSUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30577,
              "src": "244:15:73"
            },
            "id": 39031,
            "nodeType": "InheritanceSpecifier",
            "src": "244:15:73"
          },
          {
            "baseName": {
              "id": 39032,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29907,
              "src": "261:18:73"
            },
            "id": 39033,
            "nodeType": "InheritanceSpecifier",
            "src": "261:18:73"
          }
        ],
        "canonicalName": "SuperRarePushSplitter",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          39157,
          29907,
          30949,
          30577,
          30262,
          29928,
          29938,
          30441
        ],
        "name": "SuperRarePushSplitter",
        "nameLocation": "219:21:73",
        "scope": 39158,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 73
}